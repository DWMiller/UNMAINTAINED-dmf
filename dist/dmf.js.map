{"version":3,"sources":["dist/dmf_es6.js"],"names":[],"mappings":"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","file":"dist/dmf_es6.js","sourcesContent":["var dmf = function() {\r\n    'use strict';\r\n\r\n    var default_settings = {\r\n        startup: null\r\n    };\r\n\r\n    return {\r\n        config: {},\r\n        data: {},\r\n        factories: null, // populated by factories.js \r\n        fn: null, // populated by functions.js\r\n        events: {}, // used to map framework event-module bindings\r\n        modules: {},\r\n        settings: {},\r\n        /**\r\n         * Triggers starter logic for all game modules\r\n         * @return {[type]} [description]\r\n         */\r\n        activate: function(settings) {\r\n            this.settings = this.fn.extend({}, default_settings, settings);\r\n\r\n            if (!settings.startup) {\r\n                return false;\r\n            }\r\n            return this.startModule(settings.startup);\r\n        },\r\n        registerModule: function(moduleID, creator) {\r\n            this.modules[moduleID] = {\r\n                create: creator,\r\n                config: this.config[moduleID],\r\n                instance: null\r\n            };\r\n        },\r\n        createModule: function() {\r\n            console.log('createModule is deprecated, use registerModule');\r\n        },\r\n        startModule: function(moduleID) {\r\n            var mod = this.modules[moduleID];\r\n\r\n            if (!mod) {\r\n                return false;\r\n            }\r\n\r\n            var temp = mod.create(this, mod.config);\r\n            mod.instance = this.factories.module(temp);\r\n\r\n            mod = mod.instance;\r\n\r\n            if (mod.start) {\r\n                mod.start();\r\n            }\r\n\r\n            if (mod.listeners) {\r\n                this.registerEvents(mod.listeners, moduleID);\r\n            }\r\n\r\n            return mod;\r\n        },\r\n        /**\r\n         * Starts multiple modules\r\n         * @param  {String[]} modules An array of the module ids to start\r\n         * @return {[type]}         [description]\r\n         */\r\n        startModules: function(modules) {\r\n            modules.forEach(this.startModule);\r\n        },\r\n        stopModule: function(moduleID) {\r\n            var mod = this.modules[moduleID];\r\n\r\n            if (!mod) {\r\n                //module does not exist\r\n                return false;\r\n            } else if (!mod.instance) {\r\n                //module has not been started\r\n                return false;\r\n            }\r\n\r\n            mod = mod.instance;\r\n\r\n            if (mod.listeners) {\r\n                this.deregisterEvents(mod.listeners, moduleID);\r\n            }\r\n\r\n            // Modules do not require a destroy function, use it if exists\r\n            if (mod.stop) {\r\n                mod.stop();\r\n            }\r\n\r\n            delete this.modules[moduleID].instance;\r\n\r\n            return true;\r\n        },\r\n        stopModules: function(modules) {\r\n            modules.forEach(this.stopModule, this);\r\n        },\r\n        /**\r\n         * Binds framework events to a module\r\n         * @param  {[type]} evts Object containing event/function pairs to bind\r\n         * @param  {string} mod  [description]\r\n         * @return {[type]}      [description]\r\n         */\r\n        registerEvents: function(evts, moduleId) {\r\n            // Currently only called via startModule, so modules existance \r\n            // does not need to be validated here\r\n\r\n            for (var eventKey in evts) {\r\n                // Add event to event list if not yet added\r\n                if (!this.events[eventKey]) {\r\n                    this.events[eventKey] = {};\r\n                }\r\n\r\n                this.events[eventKey][moduleId] = evts[eventKey];\r\n            }\r\n\r\n        },\r\n        /**\r\n         * Unsubscribes a single module from a set of events\r\n         */\r\n        deregisterEvents: function(evts, mod) {\r\n            for (var event in evts) {\r\n                delete this.events[event][mod];\r\n            }\r\n        },\r\n        /**\r\n         * Sends events to each listening module\r\n         */\r\n        notify: function(event) {\r\n\r\n            if (arguments.length === 2) {\r\n                // Allows seperate name and data parameter, useful for primitive types data\r\n                event = {\r\n                    type: arguments[0],\r\n                    data: arguments[1]\r\n                };\r\n            } else if (typeof event === 'string') {\r\n                // Allows shorthand, trigged via event name only without requiring data\r\n                event = {\r\n                    type: event,\r\n                    data: {}\r\n                };\r\n            }\r\n\r\n            var bindings = this.events[event.type];\r\n\r\n            if (!bindings) {\r\n                return;\r\n            }\r\n\r\n            var moduleId;\r\n            for (moduleId in bindings) {\r\n                bindings[moduleId](event.data);\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\n(function() {\r\n    'use strict';\r\n    dmf.fn = {\r\n        is_arr: function(obj) {\r\n            return obj.constructor === Array;\r\n        },\r\n        extend: function() {\r\n            for (var i = 1; i < arguments.length; i++) {\r\n                for (var key in arguments[i]) {\r\n                    if (arguments[i].hasOwnProperty(key)) {\r\n                        arguments[0][key] = arguments[i][key];\r\n                    }\r\n                }\r\n            }\r\n            return arguments[0];\r\n        }\r\n    };\r\n})();\r\n\r\n(function(c) {\r\n    'use strict';\r\n    c.factories = {\r\n        module: function(newModule) {\r\n\r\n            var defaults = {\r\n                start: false,\r\n                stop: false,\r\n                listeners: false\r\n            };\r\n\r\n            return c.fn.extend({}, defaults, newModule);\r\n        }\r\n    };\r\n})(dmf);\r\n"]}